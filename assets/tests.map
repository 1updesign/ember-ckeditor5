{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","dummy/tests/app.lint-test.js","dummy/tests/helpers/destroy-app.js","dummy/tests/helpers/module-for-acceptance.js","dummy/tests/helpers/start-app.js","dummy/tests/integration/components/ck-editor-test.js","dummy/tests/test-helper.js","dummy/tests/tests.lint-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('dummy/tests/app.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | app');\n\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n});","define('dummy/tests/helpers/destroy-app', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = destroyApp;\n  function destroyApp(application) {\n    Ember.run(application, 'destroy');\n  }\n});","define('dummy/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'dummy/tests/helpers/start-app', 'dummy/tests/helpers/destroy-app'], function (exports, _qunit, _startApp, _destroyApp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function (name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _startApp.default)();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Ember.RSVP.resolve(afterEach).then(function () {\n          return (0, _destroyApp.default)(_this.application);\n        });\n      }\n    });\n  };\n});","define('dummy/tests/helpers/start-app', ['exports', 'dummy/app', 'dummy/config/environment'], function (exports, _app, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = startApp;\n  function startApp(attrs) {\n    var attributes = Ember.merge({}, _environment.default.APP);\n    attributes.autoboot = true;\n    attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n    return Ember.run(function () {\n      var application = _app.default.create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n      return application;\n    });\n  }\n});","define('dummy/tests/integration/components/ck-editor-test', ['ember-qunit', 'ember-test-helpers/wait'], function (_emberQunit, _wait) {\n  'use strict';\n\n  function _asyncToGenerator(fn) {\n    return function () {\n      var gen = fn.apply(this, arguments);\n      return new Promise(function (resolve, reject) {\n        function step(key, arg) {\n          try {\n            var info = gen[key](arg);\n            var value = info.value;\n          } catch (error) {\n            reject(error);\n            return;\n          }\n\n          if (info.done) {\n            resolve(value);\n          } else {\n            return Promise.resolve(value).then(function (value) {\n              step(\"next\", value);\n            }, function (err) {\n              step(\"throw\", err);\n            });\n          }\n        }\n\n        return step(\"next\");\n      });\n    };\n  }\n\n  (0, _emberQunit.moduleForComponent)('ck-editor', 'Integration | Component | ck editor', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('Initial render (no options)', function (assert) {\n    var _this = this;\n\n    assert.expect(1);\n    var done = assert.async();\n    // Template block usage:\n\n    Ember.run(function () {\n      _this.render(Ember.HTMLBars.template({\n        \"id\": \"X4u+kMq0\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n      \\\"],[1,[25,\\\"ck-editor\\\",null,[[\\\"value\\\"],[\\\"<h1>Hello World</h1>\\\"]]],false],[0,\\\"\\\\n    \\\"]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n    });\n\n    (0, _wait.default)().then(function () {\n      assert.equal(_this.$().text().trim(), 'Hello World', 'Initial render shows content');\n      done();\n    });\n  });\n\n  (0, _emberQunit.test)('Change and save (via button)', function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {\n      var done;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              assert.expect(2);\n              done = assert.async();\n\n\n              this.set('val', \"<h1 class='foo'>Hello World</h1>\");\n\n              this.render(Ember.HTMLBars.template({\n                \"id\": \"nYmdZ0x/\",\n                \"block\": \"{\\\"symbols\\\":[\\\"api\\\"],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"ck-editor\\\",null,[[\\\"value\\\"],[[20,[\\\"val\\\"]]]],{\\\"statements\\\":[[0,\\\"      \\\"],[6,\\\"button\\\"],[10,\\\"onClick\\\",[19,1,[\\\"actions\\\",\\\"save\\\"]],null],[7],[0,\\\"Save\\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n              }));\n\n              _context.next = 6;\n              return (0, _wait.default)();\n\n            case 6:\n              assert.equal(this.$().text().replace(/[\\s]+/g, ''), 'HelloWorldSave', 'Save button is rendered appropriately');\n\n              this.set('val', 'FOO');\n\n              _context.next = 10;\n              return (0, _wait.default)();\n\n            case 10:\n\n              assert.equal(this.$().text().replace(/[\\s]+/g, ''), 'FOOSave', 'Save button is rendered appropriately');\n              done();\n\n            case 12:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n});","define('dummy/tests/test-helper', ['dummy/app', 'dummy/config/environment', '@ember/test-helpers', 'ember-qunit'], function (_app, _environment, _testHelpers, _emberQunit) {\n  'use strict';\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n\n  (0, _emberQunit.start)();\n});","define('dummy/tests/tests.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | tests');\n\n  QUnit.test('helpers/destroy-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/module-for-acceptance.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/start-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/ck-editor-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/ck-editor-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n});","require('dummy/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClvGA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;","file":"tests.js"}